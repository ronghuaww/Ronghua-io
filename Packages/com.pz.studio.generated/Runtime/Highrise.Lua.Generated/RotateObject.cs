/*

    Copyright (c) 2025 Pocketz World. All rights reserved.

    This is a generated file, do not edit!

    Generated by com.pz.studio
*/

#if UNITY_EDITOR

using System;
using System.Linq;
using UnityEngine;
using Highrise.Client;
using Highrise.Studio;
using Highrise.Lua;
using UnityEditor;

namespace Highrise.Lua.Generated
{
    [AddComponentMenu("Lua/RotateObject")]
    [LuaRegisterType(0xf5aa64c486ae6e21, typeof(LuaBehaviour))]
    public class RotateObject : LuaBehaviourThunk
    {
        private const string s_scriptGUID = "7b42576ccc3c50d47a5ae3891d7439a4";
        public override string ScriptGUID => s_scriptGUID;

        [Tooltip("The object to move. If left empty, the object this script is attached to will be moved.")]
        [SerializeField] public UnityEngine.Transform _objectToRotate = default;
        [SerializeField] public System.Double _xAxisRotationSpeed = 0;
        [SerializeField] public System.Double _yAxisRotationSpeed = 60;
        [SerializeField] public System.Double _zAxisRotationSpeed = 0;
        [Tooltip("If negative, the object will rotate forever")]
        [SerializeField] public System.Double _rotateDuration = -1;

        protected override SerializedPropertyValue[] SerializeProperties()
        {
            if (_script == null)
                return Array.Empty<SerializedPropertyValue>();

            return new SerializedPropertyValue[]
            {
                CreateSerializedProperty(_script.GetPropertyAt(0), _objectToRotate),
                CreateSerializedProperty(_script.GetPropertyAt(1), _xAxisRotationSpeed),
                CreateSerializedProperty(_script.GetPropertyAt(2), _yAxisRotationSpeed),
                CreateSerializedProperty(_script.GetPropertyAt(3), _zAxisRotationSpeed),
                CreateSerializedProperty(_script.GetPropertyAt(4), _rotateDuration),
            };
        }
        
#if HR_STUDIO
        [MenuItem("CONTEXT/RotateObject/Edit Script")]
        private static void EditScript()
        {
            VisualStudioCodeOpener.OpenPath(AssetDatabase.GUIDToAssetPath(s_scriptGUID));
        }
#endif
    }
}

#endif
